#!/bin/bash
# (c) by Robert Kalinowski <robert.kalinowski@sharkbits.com>

rybash-include arg_parse

#------------------------------------------------------------------------------
# Some simple SSH wrappers.
#------------------------------------------------------------------------------
# Master SSH open (start).
#
# mssh_enter [@channel] [ssh_options]... ssh_host
#
mssh_enter()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	ssh $ssh_ctl_op -MNf "$@"
}
#------------------------------------------------------------------------------
# Master SSH open (start) with pass in SSHPASS.
#
# mssh_enter [@channel] [ssh_options]... ssh_host
#
mssh_enter_pass()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	if [[ ! "$SSHPASS" ]]; then
		local SSHPASS
    stty -echo; read -s -p "Enter possword for ssh $@: " SSHPASS; stty echo;
    echo
  fi
  SSHPASS="$SSHPASS" sshpass -e ssh $ssh_ctl_op -MNf "$@"
}
#------------------------------------------------------------------------------
# Master SSH exit (stop).
#
# mssh_exit [@channel]
#
mssh_exit()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	[[ $# = 0 ]] && set -- X
	ssh $ssh_ctl_op -O exit "$@" 2> /dev/null
}
#------------------------------------------------------------------------------
# Master SSH command.
#
# mssh [@channel] [ssh_options]... ssh_host [ssh_commands]...
#
mssh()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	ssh $ssh_ctl_op "$@"
}
#------------------------------------------------------------------------------
# Master SSH call remote command.
#
# mcall [@channel] remote_command [args]...
# echo remote_command | mcall [@channel] -
#
mssh_call()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	case "$1" in
		-|'')  ssh $ssh_ctl_op X bash;;
		*)     ssh $ssh_ctl_op X -- "$@";;
	esac
}
#------------------------------------------------------------------------------
mcall() { mssh_call "$@"; }
#------------------------------------------------------------------------------
# Master SSH call remote command in background. Returns PID.
#
# mcall [@channel] remote_command [args]...
#
mssh_call_bg()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	set -x
	case "$1" in
		-|'')  ssh $ssh_ctl_op X nohup bash \> /dev/null \& echo '$!';;
		*)     ssh $ssh_ctl_op X -- nohup "$@" \> /dev/null \& echo '$!';;
	esac
	set +x
}
#------------------------------------------------------------------------------
mcallbg() { mssh_call_bg "$@"; }
#------------------------------------------------------------------------------
# Master SCP command.
#
# mscp [@channel] [scp_arguments]...
#
mscp()
{
	local channel
	case "$1" in @?*) channel="$1"; shift;; esac
	local ssh_ctl_op=$(_mssh_controlop "$channel")
	scp $ssh_ctl_op "$@"
}
#------------------------------------------------------------------------------
# Helper. Get channel scket name.
_mssh_controlop()
{
	local channel="${1:-main}"
	case "$channel" in @?*) channel="${1#?}";; esac
	echo "-o ControlPath=~/.ssh/ssh-$channel-$$.sock"
}
#------------------------------------------------------------------------------
