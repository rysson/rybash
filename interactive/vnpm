#!/bin/bash

#vnpm_debug=echo


# The same variables (VIRTUAL_ENV, _OLD_VIRTUAL_PATH, etc) are used
# as in virtualenv. To make switch between npm and virtualenv easer.


function _vnpm_deactivate
{
	local name="${1:-node_modules}"
	if ! [ -z "${_OLD_VIRTUAL_PATH+_}" ] ; then
		PATH="$_OLD_VIRTUAL_PATH"
		export PATH
		unset _OLD_VIRTUAL_PATH
	fi
	# This should detect bash and zsh, which have a hash command that must
	# be called to get it to forget past commands.  Without forgetting
	# past commands the $PATH changes we made may not be respected
	if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
		hash -r 2>/dev/null
	fi

	if ! [ -z "${_OLD_VIRTUAL_PS1+_}" ] ; then
		PS1="$_OLD_VIRTUAL_PS1"
		export PS1
		unset _OLD_VIRTUAL_PS1
	fi

	unset VIRTUAL_ENV
	if [ ! "${1-}" = "nondestructive" ] ; then
		# Self destruct!
		unset -f deactivate
	fi

	#unset ENVNAME
	return 0
}

function vnpm_activate
{
	deactivate()
	{
		_vnpm_deactivate "$@"
	}

	# unset irrelevant variables
	deactivate nondestructive

	local name="${1:-node_modules}"

	[[ -d "$name/.bin" ]] || { echo "No '$name'" >&2; return 1; }

	VIRTUAL_ENV=$(readlink -f "$name")
	export VIRTUAL_ENV

	#ENVNAME="npm:$name"
	#ENVNAME="${ENVNAME%node_modules}"
	#export ENVNAME

	_OLD_VIRTUAL_PATH="$PATH"
	PATH="$VIRTUAL_ENV/.bin:$PATH"
	export PATH

	if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT-}" ] ; then
		_OLD_VIRTUAL_PS1="$PS1"
		if [ "x" != x ] ; then
			PS1="$PS1"
		else
			PS1="(`basename \"$VIRTUAL_ENV\"`) $PS1"
		fi
		export PS1
	fi

	# This should detect bash and zsh, which have a hash command that must
	# be called to get it to forget past commands.  Without forgetting
	# past commands the $PATH changes we made may not be respected
	if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
		hash -r 2>/dev/null
	fi

	return 0
}

function vnpm_create
{
	local name="${1:-node_modules}"
	[[ -d "$name/.bin" ]] && { echo "'$name' already exists" >&2; return 1; }
	echo "Creating npm virutalenv '$name'..."
	$vnpm_debug mkdir -p "$name/.bin" && vnpm_activate "$name"
}

function vnpm
{
	local cmd='vnpm_activate'
	local name=
	local -A args
	local o
	local yes="__YES__"
	while [[ "$#" > 0 ]]; do
		case "$1" in
			--*=*) o="${1#--}"; args[${o%%=*}]="${o#*=}" ;;
			--*)   o="${1#--}"; args[${o%%=*}]="$yes" ;;
			-c)    cmd='vnpm_create' ;;
			-*)    echo "Unknown option '$1'"; exit 1 ;;
			*)     name=$1;
		esac
		shift
	done
	$cmd "$name"
}

alias vnpm.exit='deactivate'

# Tests
# vnpm "$@"
